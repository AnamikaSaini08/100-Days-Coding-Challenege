class Solution {
public:
    void solve(int ind , int target , vector<int>&nums ,   vector<vector<int>>&ans)
    {
        int i = ind+1 , j = nums.size()-1;
        while(i<j)
        {
            int sum = nums[i] + nums[j];
            if(sum == target)
            {
                ans.push_back({nums[ind] , nums[i] , nums[j]});
                i++ ; j--;
                while(i<j and nums[i] == nums[i-1])
                    i++;
                while(i<j and nums[j] == nums[j+1])
                    j--;
            }
            else if(sum > target)
                j--;
            else
                i++;
        }
    }
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        if(nums.size() < 3)
            return ans;
        
        sort(nums.begin() , nums.end());
        
        for(int i=0 ; i<nums.size()-2 ; i++){
            solve(i , 0 - nums[i] , nums , ans);
            while(i<nums.size()-2 and nums[i] == nums[i+1])
                i++;
        }
        return ans;
    }
};
